server {
  listen 80;
  listen [::]:80;
  server_name astro-otter.space www.astro-otter.space;
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl;
  server_name astro-otter.space www.astro-otter.space;

  root /var/www/deep-space-objects/public;
  index index.php
  client_max_body_size 20M;

  # Symfony
  location / {
    try_files $uri /index.php$is_args$args;
  }

  location ~ ^/(index)\.php(/|$) {
    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    internal;
  }

  location ~ /analytics.js {
    proxy_pass https://www.google-analytics.com;
    expires 31536000s;
    proxy_set_header Pragma "public";
    proxy_set_header Cache-Control "max-age=31536000, public";
  }

  location ~* \.(ico|css|js|gif|jpeg|jpg|png|webp|woff|ttf|otf|svg|woff2|eot)$ {
    expires 1y;
    access_log off;
    add_header Pragma public;
    add_header Cache-Control "public, max-age="2592000;
    add_header X-Asset "yes";
  }

  location ~ \.php$ {
    #return 404;
  }

	error_log /var/log/nginx/astro-otter_error.log;
	access_log /var/log/nginx/astro-otter_access.log;

  #########################
  # Conf HTTPS
  #########################
  # Enable gzip compression.
  include /etc/nginx/configuration/web_performance/compression.conf;
  # Specify file cache expiration.
  # include /etc/nginx/configuration/web_performance/cache_expiration.conf;

  # Certificate
  # Lets encrypt
  include /etc/nginx/configuration/ssl/certificate_files.conf;

  ## TLS parameters / Cache
  include /etc/nginx/configuration/ssl/ssl_engine.conf;

  ## SSL Protocols + Ciphers
  include /etc/nginx/configuration/ssl/ssl_protocols.conf;

  ## ECDH
  include /etc/nginx/configuration/ssl/ssl_ecdh.conf;

  ## OCSP Stapling
  include /etc/nginx/configuration/ssl/ocsp_stapling.conf;

  ## Basics
  include /etc/nginx/configuration/internet_explorer/x-ua-compatible.conf;
  include /etc/nginx/configuration/location/security_file_access.conf;
  include /etc/nginx/configuration/cross-origin/requests.conf;

  ## Security
  # Add X-XSS-Protection for HTML documents.
  include /etc/nginx/configuration/security/x-xss-protection.conf;
  # Add X-Frame-Options for HTML documents.
  include /etc/nginx/configuration/security/x-frame-options.conf;
  # Add Content-Security-Policy for HTML documents.
  include /etc/nginx/configuration/security/content-security-policy.conf;
  # Add Strict-Transport-Security
  include /etc/nginx/configuration/security/strict-transport-security.conf;
  # Add Referrer-Policy for HTML documents.
  include /etc/nginx/configuration/security/referrer-policy.conf;
  # Prevent some browsers from MIME-sniffing the response
  include /etc/nginx/configuration/security/x-content-type-options.conf;
  # Permission policy
  #include /etc/nginx/configuration/security/permission-policy.conf;

}

