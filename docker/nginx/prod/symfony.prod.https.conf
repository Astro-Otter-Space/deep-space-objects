server {
  listen 80;
	listen [::]:80;
	server_name astro-otter.space www.astro-otter.space;
	return 301 https://$server_name$request_uri;
}

server {
	listen 443 ssl http2;
  listen [::]:443 ssl;
  server_name astro-otter.space www.astro-otter.space;

  root /var/www/deep-space-objects/public;
  index index.php
  client_max_body_size 20M;

  # Symfony
	location / {
		try_files $uri /index.php$is_args$args;
	}

	location ~ ^/(index)\.php(/|$) {
    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    internal;
	}

	location ~* \.(ico|css|js|gif|jpeg|jpg|png|webp|woff|ttf|otf|svg|woff2|eot)$ {
    expires 1d;
    access_log off;
    add_header Pragma public;
    add_header Cache-Control "public, max-age=86400";
    add_header X-Asset "yes";
  }

	location ~ \.php$ {
		#return 404;
	}

	error_log /var/log/nginx/astro-otter_error.log;
	access_log /var/log/nginx/astro-otter_access.log;

  #########################
  # Conf HTTPS
  #########################
  # Certificate
  # Lets encrypt
  include /etc/nginx/configuration/ssl/certificate_files.conf

  # TLS parameters / Cache
  include /etc/nginx/configuration/ssl/ssl_engine.conf

  # SSL Protocols + Ciphers
  include /etc/nginx/configuration/ssl/ssl_protocols.conf

  # ECDH
  include /etc/nginx/configuration/ssl/ssl_ecdh.conf

  # OCSP Stapling
  include /etc/nginx/configuration/ssl/ocsp_stapling.conf

  # Basics
  include /etc/nginx/configuration/internet_explorer/x-ua-compatible.conf;
  include /etc/nginx/configuration/security/referrer-policy.conf;
  include /etc/nginx/configuration/security/x-content-type-options.conf;
  include /etc/nginx/configuration/security/x-frame-options.conf;
  include /etc/nginx/configuration/security/x-xss-protection.conf;
  include /etc/nginx/configuration/location/security_file_access.conf;
  include /etc/nginx/configuration/cross-origin/requests.conf;
}
