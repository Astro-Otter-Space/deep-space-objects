security:
    encoders:
        App\Entity\BDD\ApiUser:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        api_entity_provider:
            entity:
                class: App\Entity\BDD\ApiUser
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_register:
            pattern:  ^/v1/auth/register
            stateless: true
            anonymous: true
        api_login:
            pattern: ^/v1/auth/login
            stateless: true
            anonymous: true
            provider: api_entity_provider
            json_login:
                check_path: /v1/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        api_refresh:
            pattern:  ^/v1/token/refresh
            stateless: true
            anonymous: true
        api:
            pattern:  ^/v1
            stateless: true
            anonymous: false
            provider: api_entity_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            pattern: ^/
            anonymous: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/v1/auth/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1, roles: IS_AUTHENTICATED_FULLY}
