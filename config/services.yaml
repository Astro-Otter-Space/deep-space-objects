# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app_locales: en|fr|de|es|pt|
    app.notifications.email_sender: balistik.fonfon@gmail.com
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $locale: "@=service('request_stack').getCurrentRequest().getLocale()"
            $defaultLocale: "%locale%"
            $listLocales: '%app_locales%'

    App\EventSubscriber\LocaleSubscriber:
        arguments: ['%kernel.default_locale%']
        tags: [kernel.event_subscriber]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Api\Controller\:
        resource: '../src/Api/Controller'
        tags: ['controller.service_arguments']

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Repository\:
        resource: '../src/Repository'

    App\Managers\:
        resource: '../src/Managers'

    # Client Elastic Search
    Elastica\Client:
        bind:
            $config:
                host: '%env(ELK_HOST)%'
                port: '%env(ELK_PORT)%'

    # Cache pool
    App\Service\CachepoolService:
        arguments:
            $cachePool: '@app.cache.dso'

    # Exception listener
    App\EventListener\ExceptionListener:
        arguments: ['@templating.engine.twig', '%kernel.environment%']
        tags:
          - { name: kernel.event_listener, event: kernel.exception }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones